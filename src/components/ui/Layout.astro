---
// Layout principal para todas las p√°ginas
// Audiogu√≠as Murales Santa Marta
import '../../styles/global.css';

export interface Props {
  title: string;
  description?: string;
  lang?: string;
}

const {
  title,
  description = "Audiogu√≠as interactivas de los murales de Santa Marta. Descubre el arte urbano con audio accesible.",
  lang = "es"
} = Astro.props;
---

<!DOCTYPE html>
<html lang={lang} class="scroll-smooth">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>{title}</title>
  <meta name="description" content={description}>
  
  <!-- SEO Meta Tags -->
  <meta name="keywords" content="audiogu√≠as, murales, Santa Marta, arte urbano, accesibilidad, turismo">
  <meta name="author" content="Audiogu√≠as Murales Santa Marta">
  <meta name="robots" content="index, follow">
  
  <!-- Open Graph -->
  <meta property="og:title" content={title}>
  <meta property="og:description" content={description}>
  <meta property="og:type" content="website">
  <meta property="og:locale" content={lang === "es" ? "es_ES" : "en_US"}>
  
  <!-- Favicon -->
  <link rel="icon" type="image/svg+xml" href="/favicon.svg">
  
  <!-- Preload critical fonts -->
  <link rel="preload" href="/fonts/Nunito-VariableFont_wght.ttf" as="font" type="font/ttf" crossorigin>
  
  <!-- Accessibility -->
  <meta name="theme-color" content="#0072c0">
  <meta name="color-scheme" content="light dark">
</head>

<body class="font-sans bg-slate-50 dark:bg-slate-900 text-slate-900 dark:text-slate-100 min-h-screen flex flex-col">
  <!-- Skip Link para accesibilidad -->
  <a href="#main-content" class="skip-link">
    {lang === "es" ? "Saltar al contenido principal" : "Skip to main content"}
  </a>

  <!-- Slot para el contenido (incluye Header) -->
  <slot />

  <!-- Script para insertar controles despu√©s del header -->
  <script is:inline define:vars={{ lang }}>
    document.addEventListener('DOMContentLoaded', function() {
      // Buscar el header
      const header = document.querySelector('header');
      if (header) {
        // Crear el div contenedor de controles
        const controlsContainer = document.createElement('div');
        controlsContainer.className = 'container mx-auto px-4 pt-6';
        controlsContainer.innerHTML = `
          <div class="flex justify-center">
            <div class="bg-white dark:bg-slate-800 rounded-full shadow-lg border border-slate-200 dark:border-slate-700 p-2 flex items-center space-x-2">
              <!-- Selector de idioma -->
              <a
                href="${lang === 'es' ? '/english' : '/'}"
                class="flex items-center text-slate-600 dark:text-slate-300 hover:text-SM-blue dark:hover:text-SM-blue px-3 py-2 rounded-full text-base font-medium transition-colors focus-visible border-r border-slate-200 dark:border-slate-700 pr-3 mr-1"
                aria-label="${lang === 'es' ? 'Switch to English' : 'Cambiar a Espa√±ol'}"
              >
                <span class="mr-2">${lang === 'es' ? 'üá¨üáß' : 'üá™üá∏'}</span>
                <span>${lang === 'es' ? 'EN' : 'ES'}</span>
              </a>
              <!-- Controles de accesibilidad -->
              <!-- Modo claro -->
              <button 
                onclick="setLightMode()" 
                class="p-3 rounded-full hover:bg-slate-100 dark:hover:bg-slate-700 transition-colors focus-visible"
                aria-label="${lang === 'es' ? 'Activar modo claro' : 'Activate light mode'}"
                title="${lang === 'es' ? 'Modo claro' : 'Light mode'}"
              >
                <span class="text-base">‚òÄÔ∏è</span>
              </button>
              
              <!-- Modo oscuro -->
              <button 
                onclick="setDarkMode()" 
                class="p-3 rounded-full hover:bg-slate-100 dark:hover:bg-slate-700 transition-colors focus-visible"
                aria-label="${lang === 'es' ? 'Activar modo oscuro' : 'Activate dark mode'}"
                title="${lang === 'es' ? 'Modo oscuro' : 'Dark mode'}"
              >
                <span class="text-base">üåô</span>
              </button>
              
              <!-- Alto contraste -->
              <button 
                onclick="toggleHighContrast()" 
                class="p-3 rounded-full hover:bg-slate-100 dark:hover:bg-slate-700 transition-colors focus-visible"
                aria-label="${lang === 'es' ? 'Activar/desactivar alto contraste' : 'Toggle high contrast'}"
                title="${lang === 'es' ? 'Alto contraste' : 'High contrast'}"
              >
                <svg xmlns="http://www.w3.org/2000/svg" shape-rendering="geometricPrecision" text-rendering="geometricPrecision" image-rendering="optimizeQuality" fill-rule="evenodd" clip-rule="evenodd" viewBox="0 0 512 508.47" class="w-5 h-5 fill-current">
                  <path fill-rule="nonzero" d="M254.23 508.47c-3.94 0-7.87-.1-11.77-.28h-1.54v-.07c-64.9-3.34-123.37-31.04-166.45-74.12C28.46 387.99 0 324.42 0 254.23c0-70.19 28.46-133.75 74.47-179.76C117.55 31.39 176.03 3.69 240.92.34V.27h1.54c3.9-.18 7.83-.27 11.77-.27l3.46.02.08-.02c70.19 0 133.75 28.46 179.76 74.47 46 46.01 74.47 109.57 74.47 179.76S483.53 387.99 437.53 434c-46.01 46.01-109.57 74.47-179.76 74.47l-.08-.03-3.46.03zm-13.31-30.56V30.56C184.33 33.87 133.4 58.17 95.79 95.79c-40.55 40.54-65.62 96.56-65.62 158.44 0 61.89 25.07 117.91 65.62 158.45 37.61 37.61 88.54 61.91 145.13 65.23z"/>
                </svg>
              </button>
              
              <!-- Aumentar tama√±o de fuente -->
              <button 
                onclick="adjustFontSize(1)" 
                class="px-3 py-3 rounded-full hover:bg-slate-100 dark:hover:bg-slate-700 transition-colors focus-visible text-base font-bold"
                aria-label="${lang === 'es' ? 'Aumentar tama√±o de texto' : 'Increase text size'}"
                title="${lang === 'es' ? 'Texto m√°s grande' : 'Larger text'}"
              >
                A+
              </button>
              
              <!-- Disminuir tama√±o de fuente -->
              <button 
                onclick="adjustFontSize(-1)" 
                class="px-3 py-3 rounded-full hover:bg-slate-100 dark:hover:bg-slate-700 transition-colors focus-visible text-base font-bold"
                aria-label="${lang === 'es' ? 'Disminuir tama√±o de texto' : 'Decrease text size'}"
                title="${lang === 'es' ? 'Texto m√°s peque√±o' : 'Smaller text'}"
              >
                A-
              </button>
            </div>
          </div>
        `;
        
        // Insertar despu√©s del header
        header.insertAdjacentElement('afterend', controlsContainer);
      }
    });
  </script>

  <!-- Scripts de accesibilidad y modo oscuro -->
  <script>
    // Configuraci√≥n de modo oscuro
    function initTheme() {
      const theme = localStorage.getItem('theme');
      const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;
      
      if (theme === 'dark' || (!theme && prefersDark)) {
        document.documentElement.classList.add('dark');
      } else {
        document.documentElement.classList.remove('dark');
      }
    }

    function toggleDarkMode() {
      const isDark = document.documentElement.classList.contains('dark');
      
      if (isDark) {
        document.documentElement.classList.remove('dark');
        localStorage.setItem('theme', 'light');
      } else {
        document.documentElement.classList.add('dark');
        localStorage.setItem('theme', 'dark');
      }
    }

    function setLightMode() {
      document.documentElement.classList.remove('dark');
      localStorage.setItem('theme', 'light');
    }

    function setDarkMode() {
      document.documentElement.classList.add('dark');
      localStorage.setItem('theme', 'dark');
    }

    // Configuraci√≥n de alto contraste
    function toggleHighContrast() {
      document.body.classList.toggle('high-contrast');
      const isHighContrast = document.body.classList.contains('high-contrast');
      localStorage.setItem('high-contrast', isHighContrast ? 'true' : 'false');
    }

    // Configuraci√≥n de tama√±o de fuente
    let currentFontSize = 1;
    function adjustFontSize(delta: number) {
      currentFontSize = Math.max(0.8, Math.min(1.4, currentFontSize + (delta * 0.1)));
      document.documentElement.style.fontSize = `${currentFontSize}rem`;
      localStorage.setItem('font-size', currentFontSize.toString());
    }

    // Configuraci√≥n de reducci√≥n de movimiento
    function initReduceMotion() {
      const prefersReducedMotion = window.matchMedia('(prefers-reduced-motion: reduce)').matches;
      if (prefersReducedMotion) {
        document.body.classList.add('reduce-motion');
      }
    }

    // Inicializar configuraciones al cargar la p√°gina
    document.addEventListener('DOMContentLoaded', () => {
      initTheme();
      initReduceMotion();
      
      // Restaurar configuraciones guardadas
      const savedHighContrast = localStorage.getItem('high-contrast');
      if (savedHighContrast === 'true') {
        document.body.classList.add('high-contrast');
      }
      
      const savedFontSize = localStorage.getItem('font-size');
      if (savedFontSize) {
        currentFontSize = parseFloat(savedFontSize);
        document.documentElement.style.fontSize = `${currentFontSize}rem`;
      }
    });

    // Escuchar cambios en preferencias del sistema
    window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', (e) => {
      if (!localStorage.getItem('theme')) {
        if (e.matches) {
          document.documentElement.classList.add('dark');
        } else {
          document.documentElement.classList.remove('dark');
        }
      }
    });

    // Hacer funciones globales para uso en componentes
    // Declarar las funciones en el objeto window
    (window as any).toggleDarkMode = toggleDarkMode;
    (window as any).setLightMode = setLightMode;
    (window as any).setDarkMode = setDarkMode;
    (window as any).toggleHighContrast = toggleHighContrast;
    (window as any).adjustFontSize = adjustFontSize;
  </script>
</body>
</html>

